#include <iostream>
#include "MatrixXnX.h"


int main()
{
    MatrixXnX m(3);
    m.SetElement(0, 0, 1);
    m.SetElement(0, 1, 2);
    m.SetElement(0, 2, 3);
    m.SetElement(1, 0, 4);
    m.SetElement(1, 1, 34);
    m.SetElement(1, 2, 6);
    m.SetElement(2, 0, 7);
    m.SetElement(2, 1, 12);
    m.SetElement(2, 2, 45);

    std::cout << m << '\n';
    std::cout << m.Determinant() << '\n';

    std::cout << m.InverseMatrix() << '\n';
    return 0;
}

/*
1. Написать функцию вычисления определителя квадратной матрицы, раскрывая определитель по строке.

2. Написать функцию вычисления обратной матрицы, с использованием алгебраических дополнений.

3. Написать функцию умножения матрицы на вектор.

4. Решить квадратную систему линейных уравнений методом обратной матрицы.

Функция выдает ответы :

– решение в случае его единственности;

– нет решений или решений бесконечно много.

5. Определить сложность алгоритма.
*/
